# Python bytecode 2.7 (decompiled from Python 2.7)
# Embedded file name: races/scripts/client/races/gui/gui_constants.py
from constants_utils import ConstInjector
from gui.battle_control import battle_constants
from gui.battle_control.controllers import feedback_events
from gui.server_events import cond_formatters
from messenger import m_constants
from personal_missions_constants import CONDITION_ICON
from races_common.races_constants import BATTLE_EVENT_TYPE
BATTLE_RESULTS_KEYS = {'position': CONDITION_ICON.EXPERIENCE,
 'finishTime': CONDITION_ICON.EXPERIENCE,
 'racesTotalScore': CONDITION_ICON.EXPERIENCE,
 'racesScore/SHOT': CONDITION_ICON.EXPERIENCE,
 'racesScore/RAMMING': CONDITION_ICON.EXPERIENCE,
 'racesScore/ELECTRICAL_SHOCK': CONDITION_ICON.EXPERIENCE,
 'racesScore/BOOST': CONDITION_ICON.EXPERIENCE,
 'racesScore/SHIELD': CONDITION_ICON.EXPERIENCE,
 'racesScore/POWER_IMPULSE': CONDITION_ICON.EXPERIENCE,
 'racesScore/FINISH': CONDITION_ICON.EXPERIENCE,
 'racesBattleEvent/SHOT': CONDITION_ICON.EXPERIENCE,
 'racesBattleEvent/RAMMING': CONDITION_ICON.EXPERIENCE,
 'racesBattleEvent/ELECTRICAL_SHOCK': CONDITION_ICON.EXPERIENCE,
 'racesBattleEvent/BOOST': CONDITION_ICON.EXPERIENCE,
 'racesBattleEvent/SHIELD': CONDITION_ICON.EXPERIENCE,
 'racesBattleEvent/POWER_IMPULSE': CONDITION_ICON.EXPERIENCE,
 'racesBattleEvent/FINISH': CONDITION_ICON.EXPERIENCE}

class FEEDBACK_EVENT_ID(battle_constants.FEEDBACK_EVENT_ID, ConstInjector):
    RACES_SHOT = 87
    RACES_BOOST = 88
    RACES_RAMMING = 89
    RACES_SHIELD = 90
    RACES_ELECTRICAL_SHOCK = 91
    RACES_POWER_IMPULSE = 92


class SCH_CLIENT_MSG_TYPE(m_constants.SCH_CLIENT_MSG_TYPE, ConstInjector):
    RACES_STATE = 500
    RACES_LOOT_BOXES_ACCRUAL = 501


_BATTLE_EVENT_TO_PLAYER_FEEDBACK_EVENT = {BATTLE_EVENT_TYPE.RACES_SHOT: FEEDBACK_EVENT_ID.RACES_SHOT,
 BATTLE_EVENT_TYPE.RACES_BOOST: FEEDBACK_EVENT_ID.RACES_BOOST,
 BATTLE_EVENT_TYPE.RACES_RAMMING: FEEDBACK_EVENT_ID.RACES_RAMMING,
 BATTLE_EVENT_TYPE.RACES_SHIELD: FEEDBACK_EVENT_ID.RACES_SHIELD,
 BATTLE_EVENT_TYPE.RACES_ELECTRICAL_SHOCK: FEEDBACK_EVENT_ID.RACES_ELECTRICAL_SHOCK,
 BATTLE_EVENT_TYPE.RACES_POWER_IMPULSE: FEEDBACK_EVENT_ID.RACES_POWER_IMPULSE}
_PLAYER_FEEDBACK_EXTRA_DATA_CONVERTERS = {FEEDBACK_EVENT_ID.RACES_SHOT: feedback_events._unpackInteger,
 FEEDBACK_EVENT_ID.RACES_BOOST: feedback_events._unpackInteger,
 FEEDBACK_EVENT_ID.RACES_RAMMING: feedback_events._unpackInteger,
 FEEDBACK_EVENT_ID.RACES_SHIELD: feedback_events._unpackInteger,
 FEEDBACK_EVENT_ID.RACES_ELECTRICAL_SHOCK: feedback_events._unpackInteger,
 FEEDBACK_EVENT_ID.RACES_POWER_IMPULSE: feedback_events._unpackInteger}

def injectClientConstants():
    feedback_events._BATTLE_EVENT_TO_PLAYER_FEEDBACK_EVENT.update(_BATTLE_EVENT_TO_PLAYER_FEEDBACK_EVENT)
    feedback_events._PLAYER_FEEDBACK_EXTRA_DATA_CONVERTERS.update(_PLAYER_FEEDBACK_EXTRA_DATA_CONVERTERS)
    cond_formatters.BATTLE_RESULTS_KEYS.update(BATTLE_RESULTS_KEYS)
