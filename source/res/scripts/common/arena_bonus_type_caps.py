# Python bytecode 2.7 (decompiled from Python 2.7)
# Embedded file name: scripts/common/arena_bonus_type_caps.py
from constants import ARENA_BONUS_TYPE
from soft_exception import SoftException

class ARENA_BONUS_TYPE_CAPS():
    RESULTS = 'RESULTS'
    DAMAGE_VEHICLE = 'DAMAGE_VEHICLE'
    CREDITS = 'CREDITS'
    XP = 'XP'
    RANSOM_IN = 'RANSOM_IN'
    REWARD_FOR_ACHIEVEMENT = 'REWARD_FOR_ACHIEVEMENT'
    QUESTS = 'QUESTS'
    DOSSIER_TOTAL = 'DOSSIER_TOTAL'
    DOSSIER_KILL_LIST = 'DOSSIER_KILL_LIST'
    DOSSIER_15X15 = 'DOSSIER_15X15'
    DOSSIER_7X7 = 'DOSSIER_7X7'
    DOSSIER_CLAN = 'DOSSIER_CLAN'
    DOSSIER_ACHIEVEMENTS_15X15 = 'DOSSIER_ACHIEVEMENTS_15X15'
    DOSSIER_MARKS_ON_GUN = 'DOSSIER_MARKS_ON_GUN'
    DOSSIER_MARK_OF_MASTERY = 'DOSSIER_MARK_OF_MASTERY'
    DOSSIER_ACHIEVEMENTS_RANKED15X15 = 'DOSSIER_ACHIEVEMENTS_RANKED15X15'
    DOSSIER_ACHIEVEMENTS_7X7 = 'DOSSIER_ACHIEVEMENTS_7X7'
    DOSSIER_MAX15X15 = 'DOSSIER_MAX15X15'
    DOSSIER_MAX7X7 = 'DOSSIER_MAX7X7'
    RANKED = 'RANKED'
    DOSSIER_RANKED = 'DOSSIER_RANKED'
    DOSSIER_MAXRANKED = 'DOSSIER_MAXRANKED'
    CYBERSPORT_RATING = 'CYBERSPORT_RATING'
    XP_FACTOR_15X15 = 'XP_FACTOR_15X15'
    XP_FACTOR_7X7 = 'XP_FACTOR_7X7'
    CREDITS_FACTOR_15X15 = 'CREDITS_FACTOR_15X15'
    CREDITS_FACTOR_7X7 = 'CREDITS_FACTOR_7X7'
    TKILL_RATING = 'TKILL_RATING'
    DOSSIER_SORTIE = 'DOSSIER_SORTIE'
    DOSSIER_MAXSORTIE = 'DOSSIER_MAXSORTIE'
    DOSSIER_ACHIEVEMENTS_SORTIE = 'DOSSIER_ACHIEVEMENTS_SORTIE'
    DOSSIER_FORT_BATTLE = 'DOSSIER_FORT_BATTLE'
    DOSSIER_MAXFORTBATTLE = 'DOSSIER_MAXFORTBATTLE'
    REF_SYSTEM_BONUS = 'REF_SYSTEM_BONUS'
    DOSSIER_RATED7X7 = 'DOSSIER_RATED7X7'
    DOSSIER_MAXRATED7X7 = 'DOSSIER_MAXRATED7X7'
    DOSSIER_ACHIEVEMENTS_RATED7X7 = 'DOSSIER_ACHIEVEMENTS_RATED7X7'
    RESPAWN = 'RESPAWN'
    RESPAWN_TESTING = 'RESPAWN_TESTING'
    INTERACTIVE_STATS = 'INTERACTIVE_STATS'
    FLAG_MECHANICS = 'FLAG_MECHANICS'
    WIN_POINTS_MECHANICS = 'WIN_POINTS_MECHANICS'
    REPAIR_MECHANICS = 'REPAIR_MECHANICS'
    NO_ALLY_DAMAGE = 'NO_ALLY_DAMAGE'
    NO_ALLY_DAMAGE_EXCEPT_SPG = 'NO_ALLY_DAMAGE_EXCEPT_SPG'
    DAILY_MULTIPLIED_XP = 'DAILY_MULTIPLIED_XP'
    MULTITEAMS = 'MULTITEAMS'
    DOSSIER_GLOBAL_MAP = 'DOSSIER_GLOBAL_MAP'
    RAGE_MECHANICS = 'RAGE_MECHANICS'
    RESOURCE_POINTS = 'RESOURCE_POINTS'
    RANSOM_OUT = 'RANSOM_OUT'
    RENT_BATTLES_COUNTED = 'RENT_BATTLES_COUNTED'
    DOSSIER_FALLOUT = 'DOSSIER_FALLOUT'
    DOSSIER_MAXFALLOUT = 'DOSSIER_MAXFALLOUT'
    CREW_IMMUNE_TO_DAMAGE = 'CREW_IMMUNE_TO_DAMAGE'
    BOOSTERS = 'BOOSTERS'
    GAS_ATTACK_MECHANICS = 'GAS_ATTACK_MECHANICS'
    DOSSIER_ACHIEVEMENTS_FALLOUT = 'DOSSIER_ACHIEVEMENTS_FALLOUT'
    SQUADS = 'SQUADS'
    SQUAD_XP = 'SQUAD_XP'
    COMMON_CHAT = 'COMMON_CHAT'
    CREDITS_FACTOR_BOOTCAMP = 'CREDITS_FACTOR_BOOTCAMP'
    XP_FACTOR_BOOTCAMP = 'XP_FACTOR_BOOTCAMP'
    INFINITE_AMMO = 'INFINITE_AMMO'
    TEAM_HEALTH_BAR = 'TEAM_HEALTH_BAR'
    CRYSTAL_REWARDS = 'CRYSTAL_REWARDS'
    DOSSIER_30X30 = 'DOSSIER_30X30'
    DOSSIER_MAX30X30 = 'DOSSIER_MAX30X30'
    ACHIEVEMENT_CONDITIONS_EXT = 'ACHIEVEMENT_CONDITIONS_EXT'
    DEFEAT_ON_KILL_TEAMMATE = 'DEFEAT_ON_KILL_TEAMMATE'
    VICTORY_DEFEAT_MESSAGE = 'VICTORY_DEFEAT_MESSAGE'
    BOOTCAMP_MECHANICS = 'BOOTCAMP_MECHANICS'
    EPIC = 'EPIC'
    SECTOR_MECHANICS = 'SECTOR_MECHANICS'
    PROTECTION_ZONE = 'PROTECTION_ZONE'
    DESTRUCTIBLE_ENTITIES = 'DESTRUCTIBLE_ENTITIES'
    STEP_REPAIR_MECHANIC = 'STEP_REPAIR_MECHANIC'
    PLAYER_RANK_MECHANICS = 'PLAYER_RANK_MECHANICS'
    RECOVERY_MECHANIC = 'RECOVERY_MECHANIC'
    OVERTIME_MECHANIC = 'OVERTIME_MECHANIC'
    DOSSIER_EPIC_BATTLE = 'DOSSIER_EPIC_BATTLE'
    DOSSIER_MAX_EPIC_BATTLE = 'DOSSIER_MAX_EPIC_BATTLE'
    DOSSIER_ACHIEVEMENTS_EPIC_BATTLE = 'DOSSIER_ACHIEVEMENTS_EPIC_BATTLE'
    DETAILED_XP = 'DETAILED_XP'
    NO_REMOVE_RENTED_STYLE = 'NO_REMOVE_RENTED_STYLE'
    WITH_AI = 'WITH_AI'
    REGULAR = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     CREDITS_FACTOR_15X15,
     XP,
     XP_FACTOR_15X15,
     REWARD_FOR_ACHIEVEMENT,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_15X15,
     DOSSIER_ACHIEVEMENTS_15X15,
     DOSSIER_MARKS_ON_GUN,
     DOSSIER_MARK_OF_MASTERY,
     DOSSIER_MAX15X15,
     TKILL_RATING,
     REF_SYSTEM_BONUS,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     BOOSTERS,
     SQUADS,
     SQUAD_XP,
     CRYSTAL_REWARDS,
     VICTORY_DEFEAT_MESSAGE,
     WITH_AI))
    TRAINING = frozenset((RESULTS,
     REPAIR_MECHANICS,
     COMMON_CHAT,
     VICTORY_DEFEAT_MESSAGE,
     NO_REMOVE_RENTED_STYLE,
     WITH_AI))
    TOURNAMENT = frozenset((RESULTS,
     TKILL_RATING,
     REPAIR_MECHANICS,
     QUESTS,
     VICTORY_DEFEAT_MESSAGE))
    TOURNAMENT_REGULAR = frozenset((RESULTS,
     TKILL_RATING,
     REPAIR_MECHANICS,
     CREDITS,
     CREDITS_FACTOR_7X7,
     XP,
     XP_FACTOR_7X7,
     QUESTS,
     BOOSTERS,
     DAMAGE_VEHICLE,
     VICTORY_DEFEAT_MESSAGE))
    TOURNAMENT_CLAN = frozenset((RESULTS,
     TKILL_RATING,
     REPAIR_MECHANICS,
     CREDITS,
     CREDITS_FACTOR_7X7,
     XP,
     XP_FACTOR_7X7,
     QUESTS,
     BOOSTERS,
     VICTORY_DEFEAT_MESSAGE))
    CLAN = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     CREDITS_FACTOR_15X15,
     XP,
     XP_FACTOR_15X15,
     RANSOM_IN,
     RANSOM_OUT,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_15X15,
     DOSSIER_CLAN,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     VICTORY_DEFEAT_MESSAGE))
    GLOBAL_MAP = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     CREDITS_FACTOR_15X15,
     XP,
     XP_FACTOR_15X15,
     RANSOM_IN,
     RANSOM_OUT,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_GLOBAL_MAP,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     VICTORY_DEFEAT_MESSAGE))
    TUTORIAL = frozenset((VICTORY_DEFEAT_MESSAGE,))
    CYBERSPORT = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     CREDITS_FACTOR_7X7,
     XP,
     XP_FACTOR_7X7,
     RANSOM_IN,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_7X7,
     DOSSIER_MAX7X7,
     CYBERSPORT_RATING,
     DOSSIER_ACHIEVEMENTS_7X7,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     BOOSTERS,
     VICTORY_DEFEAT_MESSAGE))
    EVENT_BATTLES = frozenset((RESULTS,
     QUESTS,
     SQUADS,
     VICTORY_DEFEAT_MESSAGE))
    EVENT_BATTLES_2 = frozenset((RESULTS,
     QUESTS,
     SQUADS,
     VICTORY_DEFEAT_MESSAGE))
    FALLOUT_CLASSIC = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     QUESTS,
     RESPAWN,
     INTERACTIVE_STATS,
     FLAG_MECHANICS,
     WIN_POINTS_MECHANICS,
     REPAIR_MECHANICS,
     TKILL_RATING,
     RAGE_MECHANICS,
     RESOURCE_POINTS,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     BOOSTERS,
     DOSSIER_FALLOUT,
     DOSSIER_MAXFALLOUT,
     DOSSIER_TOTAL,
     DOSSIER_ACHIEVEMENTS_FALLOUT,
     SQUADS,
     REWARD_FOR_ACHIEVEMENT))
    FALLOUT_MULTITEAM = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     QUESTS,
     RESPAWN,
     INTERACTIVE_STATS,
     FLAG_MECHANICS,
     WIN_POINTS_MECHANICS,
     REPAIR_MECHANICS,
     TKILL_RATING,
     MULTITEAMS,
     RAGE_MECHANICS,
     RESOURCE_POINTS,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     BOOSTERS,
     DOSSIER_FALLOUT,
     DOSSIER_MAXFALLOUT,
     DOSSIER_TOTAL,
     GAS_ATTACK_MECHANICS,
     DOSSIER_ACHIEVEMENTS_FALLOUT,
     SQUADS,
     REWARD_FOR_ACHIEVEMENT))
    _OBSOLETE__SORTIE = frozenset()
    _OBSOLETE__FORT_BATTLE = frozenset()
    RATED_SANDBOX = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     CREDITS_FACTOR_15X15,
     XP,
     XP_FACTOR_15X15,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_15X15,
     DOSSIER_MAX15X15,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     CREW_IMMUNE_TO_DAMAGE,
     RENT_BATTLES_COUNTED,
     BOOSTERS,
     VICTORY_DEFEAT_MESSAGE))
    SANDBOX = frozenset((RESULTS,
     TKILL_RATING,
     CREW_IMMUNE_TO_DAMAGE,
     VICTORY_DEFEAT_MESSAGE))
    BOOTCAMP = frozenset((RESULTS,
     CREDITS,
     CREDITS_FACTOR_BOOTCAMP,
     XP,
     XP_FACTOR_BOOTCAMP,
     INFINITE_AMMO,
     DEFEAT_ON_KILL_TEAMMATE,
     BOOTCAMP_MECHANICS,
     WITH_AI))
    SORTIE_2 = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     RANSOM_IN,
     RANSOM_OUT,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_SORTIE,
     DOSSIER_MAXSORTIE,
     DOSSIER_ACHIEVEMENTS_SORTIE,
     QUESTS,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     VICTORY_DEFEAT_MESSAGE))
    FORT_BATTLE_2 = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     RANSOM_IN,
     RANSOM_OUT,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_FORT_BATTLE,
     DOSSIER_MAXFORTBATTLE,
     QUESTS,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     VICTORY_DEFEAT_MESSAGE))
    RANKED_BATTLE = frozenset((RESULTS,
     RANKED,
     DOSSIER_RANKED,
     DOSSIER_MAXRANKED,
     DAMAGE_VEHICLE,
     CREDITS,
     CREDITS_FACTOR_15X15,
     XP,
     XP_FACTOR_15X15,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     TKILL_RATING,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     BOOSTERS,
     DOSSIER_ACHIEVEMENTS_RANKED15X15,
     DOSSIER_MARK_OF_MASTERY,
     REWARD_FOR_ACHIEVEMENT,
     VICTORY_DEFEAT_MESSAGE,
     DETAILED_XP,
     NO_ALLY_DAMAGE_EXCEPT_SPG))
    EPIC_RANDOM = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     CREDITS_FACTOR_15X15,
     XP,
     XP_FACTOR_15X15,
     REWARD_FOR_ACHIEVEMENT,
     QUESTS,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_30X30,
     DOSSIER_ACHIEVEMENTS_15X15,
     DOSSIER_MARK_OF_MASTERY,
     DOSSIER_MAX30X30,
     TKILL_RATING,
     REF_SYSTEM_BONUS,
     DAILY_MULTIPLIED_XP,
     RENT_BATTLES_COUNTED,
     REPAIR_MECHANICS,
     BOOSTERS,
     SQUADS,
     SQUAD_XP,
     TEAM_HEALTH_BAR,
     CRYSTAL_REWARDS,
     ACHIEVEMENT_CONDITIONS_EXT,
     VICTORY_DEFEAT_MESSAGE,
     WITH_AI))
    EPIC_RANDOM_TRAINING = frozenset((RESULTS,
     REPAIR_MECHANICS,
     COMMON_CHAT,
     TEAM_HEALTH_BAR,
     VICTORY_DEFEAT_MESSAGE))
    EPIC_BATTLE = frozenset((RESULTS,
     DAMAGE_VEHICLE,
     CREDITS,
     XP,
     RESPAWN,
     SECTOR_MECHANICS,
     DESTRUCTIBLE_ENTITIES,
     STEP_REPAIR_MECHANIC,
     PLAYER_RANK_MECHANICS,
     PROTECTION_ZONE,
     RECOVERY_MECHANIC,
     OVERTIME_MECHANIC,
     SQUADS,
     SQUAD_XP,
     DOSSIER_TOTAL,
     DOSSIER_KILL_LIST,
     DOSSIER_EPIC_BATTLE,
     DOSSIER_MAX_EPIC_BATTLE,
     DOSSIER_ACHIEVEMENTS_EPIC_BATTLE,
     TKILL_RATING,
     EPIC,
     VICTORY_DEFEAT_MESSAGE,
     NO_ALLY_DAMAGE,
     BOOSTERS,
     RENT_BATTLES_COUNTED,
     WITH_AI))
    DOSSIER_ACHIEVEMENTS = frozenset((DOSSIER_ACHIEVEMENTS_15X15,
     DOSSIER_ACHIEVEMENTS_RANKED15X15,
     DOSSIER_ACHIEVEMENTS_7X7,
     DOSSIER_ACHIEVEMENTS_RATED7X7,
     DOSSIER_ACHIEVEMENTS_SORTIE,
     DOSSIER_ACHIEVEMENTS_EPIC_BATTLE))
    __RULES = (lambda caps: not set(ARENA_BONUS_TYPE_CAPS.DOSSIER_ACHIEVEMENTS) & set(caps) or ARENA_BONUS_TYPE_CAPS.MULTITEAMS not in caps,
     lambda caps: not set(ARENA_BONUS_TYPE_CAPS.DOSSIER_ACHIEVEMENTS) & set(caps) or ARENA_BONUS_TYPE_CAPS.RESPAWN not in caps or ARENA_BONUS_TYPE_CAPS.DOSSIER_ACHIEVEMENTS_EPIC_BATTLE in caps,
     lambda caps: ARENA_BONUS_TYPE_CAPS.CYBERSPORT_RATING not in caps or ARENA_BONUS_TYPE_CAPS.MULTITEAMS not in caps,
     lambda caps: ARENA_BONUS_TYPE_CAPS.WIN_POINTS_MECHANICS not in caps or ARENA_BONUS_TYPE_CAPS.INTERACTIVE_STATS in caps)
    _typeToCaps = {ARENA_BONUS_TYPE.REGULAR: REGULAR,
     ARENA_BONUS_TYPE.TRAINING: TRAINING,
     ARENA_BONUS_TYPE.TOURNAMENT: TOURNAMENT,
     ARENA_BONUS_TYPE.TOURNAMENT_REGULAR: TOURNAMENT_REGULAR,
     ARENA_BONUS_TYPE.TOURNAMENT_CLAN: TOURNAMENT_CLAN,
     ARENA_BONUS_TYPE.CLAN: CLAN,
     ARENA_BONUS_TYPE.GLOBAL_MAP: GLOBAL_MAP,
     ARENA_BONUS_TYPE.TUTORIAL: TUTORIAL,
     ARENA_BONUS_TYPE.CYBERSPORT: CYBERSPORT,
     ARENA_BONUS_TYPE.FALLOUT_CLASSIC: FALLOUT_CLASSIC,
     ARENA_BONUS_TYPE.FALLOUT_MULTITEAM: FALLOUT_MULTITEAM,
     ARENA_BONUS_TYPE.EVENT_BATTLES: EVENT_BATTLES,
     ARENA_BONUS_TYPE.EVENT_BATTLES_2: EVENT_BATTLES_2,
     ARENA_BONUS_TYPE.RATED_SANDBOX: RATED_SANDBOX,
     ARENA_BONUS_TYPE.SANDBOX: SANDBOX,
     ARENA_BONUS_TYPE.SORTIE_2: SORTIE_2,
     ARENA_BONUS_TYPE.FORT_BATTLE_2: FORT_BATTLE_2,
     ARENA_BONUS_TYPE.RANKED: RANKED_BATTLE,
     ARENA_BONUS_TYPE.BOOTCAMP: BOOTCAMP,
     ARENA_BONUS_TYPE.EPIC_RANDOM: EPIC_RANDOM,
     ARENA_BONUS_TYPE.EPIC_RANDOM_TRAINING: EPIC_RANDOM_TRAINING,
     ARENA_BONUS_TYPE.EPIC_BATTLE: EPIC_BATTLE}

    @staticmethod
    def init():
        for caps in ARENA_BONUS_TYPE_CAPS._typeToCaps.itervalues():
            for rule in ARENA_BONUS_TYPE_CAPS.__RULES:
                if not rule(caps):
                    raise SoftException('Caps is invalid')

    @staticmethod
    def get(arenaBonusType):
        return ARENA_BONUS_TYPE_CAPS._typeToCaps.get(arenaBonusType, frozenset())

    @staticmethod
    def checkAny(arenaBonusType, *args):
        caps = ARENA_BONUS_TYPE_CAPS.get(arenaBonusType)
        for cap in args:
            if isinstance(cap, str):
                if cap in caps:
                    return True
            if isinstance(cap, (set, frozenset)):
                if len(cap & caps) > 0:
                    return True

        return False

    @staticmethod
    def checkAll(arenaBonusType, *args):
        caps = ARENA_BONUS_TYPE_CAPS.get(arenaBonusType)
        for cap in args:
            if isinstance(cap, str):
                if cap not in caps:
                    return False
            if isinstance(cap, (set, frozenset)):
                if len(cap & caps) != len(cap):
                    return False
            return False

        return True


ARENA_BONUS_TYPE_CAPS.init()
